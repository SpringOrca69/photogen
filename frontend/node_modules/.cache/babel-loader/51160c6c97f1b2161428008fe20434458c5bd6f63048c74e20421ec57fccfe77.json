{"ast":null,"code":"var _jsxFileName = \"/Users/bharath/Desktop/OOP Grp Proj React(JS) & SpringBoot(Java)/photogen/frontend/src/components/CropResize.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport './CropResize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CropResize({\n  onNext,\n  onBack\n}) {\n  _s();\n  const [images, setImages] = useState(() => {\n    const savedImages = sessionStorage.getItem('uploadedImages');\n    return savedImages ? JSON.parse(savedImages) : [];\n  });\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const cropperRef = useRef(null);\n  const handleCrop = () => {\n    var _cropperRef$current;\n    const cropper = (_cropperRef$current = cropperRef.current) === null || _cropperRef$current === void 0 ? void 0 : _cropperRef$current.cropper;\n    if (cropper) {\n      const croppedCanvas = cropper.getCroppedCanvas();\n      const croppedImage = croppedCanvas.toDataURL();\n\n      // Create new image entry with cropped version\n      const newImage = {\n        url: croppedImage,\n        name: `${images[currentImageIndex].name}_cropped`,\n        originalIndex: currentImageIndex\n      };\n      const updatedImages = [...images, newImage];\n      setImages(updatedImages);\n      setCurrentImageIndex(updatedImages.length - 1);\n      sessionStorage.setItem('uploadedImages', JSON.stringify(updatedImages));\n    }\n  };\n  const handleThumbnailClick = index => {\n    setCurrentImageIndex(index);\n  };\n  const handleNext = () => {\n    onNext('Generate');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crop-resize-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crop-resize-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"editor-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Image Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cropper-container\",\n          children: images.length > 0 && /*#__PURE__*/_jsxDEV(Cropper, {\n            ref: cropperRef,\n            src: images[currentImageIndex].url,\n            style: {\n              height: 500,\n              width: '100%'\n            },\n            aspectRatio: 1,\n            guides: true,\n            viewMode: 2,\n            dragMode: \"move\",\n            scalable: true,\n            zoomable: true,\n            autoCropArea: 1,\n            background: true,\n            responsive: true,\n            cropBoxMovable: true,\n            cropBoxResizable: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onBack,\n            className: \"control-button secondary\",\n            children: \"\\u2190 Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCrop,\n            className: \"control-button primary\",\n            children: \"Save Crop as New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            className: \"control-button primary\",\n            children: \"Continue \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"thumbnails-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Image Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumbnails-grid\",\n          children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `thumbnail-card ${currentImageIndex === index ? 'active' : ''}`,\n            onClick: () => handleThumbnailClick(index),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thumbnail-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.url,\n                alt: `Version ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thumbnail-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"thumbnail-name\",\n                children: image.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), image.originalIndex !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"thumbnail-badge\",\n                children: \"Cropped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(CropResize, \"vrN1XWTplqmZ0gAdQeVfRzmHt6w=\");\n_c = CropResize;\nexport default CropResize;\nvar _c;\n$RefreshReg$(_c, \"CropResize\");","map":{"version":3,"names":["React","useState","useRef","Cropper","jsxDEV","_jsxDEV","CropResize","onNext","onBack","_s","images","setImages","savedImages","sessionStorage","getItem","JSON","parse","currentImageIndex","setCurrentImageIndex","cropperRef","handleCrop","_cropperRef$current","cropper","current","croppedCanvas","getCroppedCanvas","croppedImage","toDataURL","newImage","url","name","originalIndex","updatedImages","length","setItem","stringify","handleThumbnailClick","index","handleNext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","style","height","width","aspectRatio","guides","viewMode","dragMode","scalable","zoomable","autoCropArea","background","responsive","cropBoxMovable","cropBoxResizable","onClick","map","image","alt","undefined","_c","$RefreshReg$"],"sources":["/Users/bharath/Desktop/OOP Grp Proj React(JS) & SpringBoot(Java)/photogen/frontend/src/components/CropResize.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport './CropResize.css';\n\nfunction CropResize({ onNext, onBack }) {\n  const [images, setImages] = useState(() => {\n    const savedImages = sessionStorage.getItem('uploadedImages');\n    return savedImages ? JSON.parse(savedImages) : [];\n  });\n  \n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const cropperRef = useRef(null);\n\n  const handleCrop = () => {\n    const cropper = cropperRef.current?.cropper;\n    if (cropper) {\n      const croppedCanvas = cropper.getCroppedCanvas();\n      const croppedImage = croppedCanvas.toDataURL();\n      \n      // Create new image entry with cropped version\n      const newImage = {\n        url: croppedImage,\n        name: `${images[currentImageIndex].name}_cropped`,\n        originalIndex: currentImageIndex\n      };\n      \n      const updatedImages = [...images, newImage];\n      setImages(updatedImages);\n      setCurrentImageIndex(updatedImages.length - 1);\n      sessionStorage.setItem('uploadedImages', JSON.stringify(updatedImages));\n    }\n  };\n\n  const handleThumbnailClick = (index) => {\n    setCurrentImageIndex(index);\n  };\n\n  const handleNext = () => {\n    onNext('Generate');\n  };\n\n  return (\n    <div className=\"crop-resize-wrapper\">\n      <div className=\"crop-resize-container\">\n        <section className=\"editor-section\">\n          <h2 className=\"section-title\">Image Editor</h2>\n          <div className=\"cropper-container\">\n            {images.length > 0 && (\n              <Cropper\n                ref={cropperRef}\n                src={images[currentImageIndex].url}\n                style={{ height: 500, width: '100%' }}\n                aspectRatio={1}\n                guides={true}\n                viewMode={2}\n                dragMode=\"move\"\n                scalable={true}\n                zoomable={true}\n                autoCropArea={1}\n                background={true}\n                responsive={true}\n                cropBoxMovable={true}\n                cropBoxResizable={true}\n              />\n            )}\n          </div>\n\n          <div className=\"controls\">\n            <button onClick={onBack} className=\"control-button secondary\">\n              ← Back\n            </button>\n            \n            <button onClick={handleCrop} className=\"control-button primary\">\n              Save Crop as New\n            </button>\n\n            <button onClick={handleNext} className=\"control-button primary\">\n              Continue →\n            </button>\n          </div>\n        </section>\n\n        <section className=\"thumbnails-section\">\n          <h2 className=\"section-title\">Image Gallery</h2>\n          <div className=\"thumbnails-grid\">\n            {images.map((image, index) => (\n              <div \n                key={index}\n                className={`thumbnail-card ${currentImageIndex === index ? 'active' : ''}`}\n                onClick={() => handleThumbnailClick(index)}\n              >\n                <div className=\"thumbnail-image\">\n                  <img src={image.url} alt={`Version ${index + 1}`} />\n                </div>\n                <div className=\"thumbnail-info\">\n                  <span className=\"thumbnail-name\">{image.name}</span>\n                  {image.originalIndex !== undefined && (\n                    <span className=\"thumbnail-badge\">Cropped</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default CropResize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}