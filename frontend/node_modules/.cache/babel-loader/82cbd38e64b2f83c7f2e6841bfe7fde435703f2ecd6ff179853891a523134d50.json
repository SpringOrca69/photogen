{"ast":null,"code":"var _jsxFileName = \"/Users/bharath/Desktop/OOP Grp Proj React(JS) & SpringBoot(Java)/photogen/frontend/src/components/CropResize.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport './CropResize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CropResize({\n  onNext,\n  onBack\n}) {\n  _s();\n  const [images, setImages] = useState(() => {\n    const savedImages = sessionStorage.getItem('uploadedImages');\n    return savedImages ? JSON.parse(savedImages) : [];\n  });\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const cropperRef = useRef(null);\n  const handleCrop = () => {\n    var _cropperRef$current;\n    const cropper = (_cropperRef$current = cropperRef.current) === null || _cropperRef$current === void 0 ? void 0 : _cropperRef$current.cropper;\n    if (cropper) {\n      const croppedCanvas = cropper.getCroppedCanvas();\n      const croppedImage = croppedCanvas.toDataURL();\n      const updatedImages = [...images];\n      updatedImages[currentImageIndex] = {\n        ...updatedImages[currentImageIndex],\n        url: croppedImage\n      };\n      setImages(updatedImages);\n      sessionStorage.setItem('uploadedImages', JSON.stringify(updatedImages));\n    }\n  };\n  const handleThumbnailClick = index => {\n    setCurrentImageIndex(index);\n  };\n  const handleNext = () => {\n    onNext('Generate');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crop-resize-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-container\",\n        children: images.length > 0 && /*#__PURE__*/_jsxDEV(Cropper, {\n          ref: cropperRef,\n          src: images[currentImageIndex].url,\n          style: {\n            height: 400,\n            width: '100%'\n          },\n          aspectRatio: 1,\n          guides: true,\n          viewMode: 1,\n          dragMode: \"move\",\n          scalable: true,\n          zoomable: true,\n          autoCropArea: 1,\n          background: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onBack,\n          className: \"control-button\",\n          children: \"Back to Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCrop,\n          className: \"control-button primary\",\n          children: \"Crop Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: \"control-button primary\",\n          children: \"Next Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnails-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Image to Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnails-grid\",\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thumbnail ${currentImageIndex === index ? 'active' : ''}`,\n          onClick: () => handleThumbnailClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: `Thumbnail ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"thumbnail-name\",\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CropResize, \"vrN1XWTplqmZ0gAdQeVfRzmHt6w=\");\n_c = CropResize;\nexport default CropResize;\nvar _c;\n$RefreshReg$(_c, \"CropResize\");","map":{"version":3,"names":["React","useState","useRef","Cropper","jsxDEV","_jsxDEV","CropResize","onNext","onBack","_s","images","setImages","savedImages","sessionStorage","getItem","JSON","parse","currentImageIndex","setCurrentImageIndex","cropperRef","handleCrop","_cropperRef$current","cropper","current","croppedCanvas","getCroppedCanvas","croppedImage","toDataURL","updatedImages","url","setItem","stringify","handleThumbnailClick","index","handleNext","className","children","length","ref","src","style","height","width","aspectRatio","guides","viewMode","dragMode","scalable","zoomable","autoCropArea","background","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","image","alt","name","_c","$RefreshReg$"],"sources":["/Users/bharath/Desktop/OOP Grp Proj React(JS) & SpringBoot(Java)/photogen/frontend/src/components/CropResize.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport './CropResize.css';\n\nfunction CropResize({ onNext, onBack }) {\n  const [images, setImages] = useState(() => {\n    const savedImages = sessionStorage.getItem('uploadedImages');\n    return savedImages ? JSON.parse(savedImages) : [];\n  });\n  \n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const cropperRef = useRef(null);\n\n  const handleCrop = () => {\n    const cropper = cropperRef.current?.cropper;\n    if (cropper) {\n      const croppedCanvas = cropper.getCroppedCanvas();\n      const croppedImage = croppedCanvas.toDataURL();\n      \n      const updatedImages = [...images];\n      updatedImages[currentImageIndex] = {\n        ...updatedImages[currentImageIndex],\n        url: croppedImage\n      };\n      \n      setImages(updatedImages);\n      sessionStorage.setItem('uploadedImages', JSON.stringify(updatedImages));\n    }\n  };\n\n  const handleThumbnailClick = (index) => {\n    setCurrentImageIndex(index);\n  };\n\n  const handleNext = () => {\n    onNext('Generate');\n  };\n\n  return (\n    <div className=\"crop-resize-container\">\n      <div className=\"main-editor\">\n        <div className=\"cropper-container\">\n          {images.length > 0 && (\n            <Cropper\n              ref={cropperRef}\n              src={images[currentImageIndex].url}\n              style={{ height: 400, width: '100%' }}\n              aspectRatio={1}\n              guides={true}\n              viewMode={1}\n              dragMode=\"move\"\n              scalable={true}\n              zoomable={true}\n              autoCropArea={1}\n              background={false}\n            />\n          )}\n        </div>\n\n        <div className=\"controls\">\n          <button onClick={onBack} className=\"control-button\">\n            Back to Upload\n          </button>\n          \n          <button onClick={handleCrop} className=\"control-button primary\">\n            Crop Image\n          </button>\n\n          <button onClick={handleNext} className=\"control-button primary\">\n            Next Step\n          </button>\n        </div>\n      </div>\n\n      <div className=\"thumbnails-container\">\n        <h3>Select Image to Edit</h3>\n        <div className=\"thumbnails-grid\">\n          {images.map((image, index) => (\n            <div \n              key={index}\n              className={`thumbnail ${currentImageIndex === index ? 'active' : ''}`}\n              onClick={() => handleThumbnailClick(index)}\n            >\n              <img src={image.url} alt={`Thumbnail ${index + 1}`} />\n              <span className=\"thumbnail-name\">{image.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CropResize;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}